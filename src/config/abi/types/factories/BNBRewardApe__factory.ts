/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  Overrides,
  BigNumberish,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { BNBRewardApe, BNBRewardApeInterface } from "../BNBRewardApe";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IBEP20",
        name: "_stakeToken",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_rewardPerBlock",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_startBlock",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Deposit",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "DepositBNBRewards",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "EmergencyWithdraw",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Withdraw",
    type: "event",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "poolInfo",
    outputs: [
      {
        internalType: "contract IBEP20",
        name: "lpToken",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "allocPoint",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "lastRewardBlock",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "accRewardTokenPerShare",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "rewardPerBlock",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "stakeToken",
    outputs: [
      {
        internalType: "contract IBEP20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "startBlock",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "userInfo",
    outputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "rewardDebt",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_from",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_to",
        type: "uint256",
      },
    ],
    name: "getMultiplier",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_user",
        type: "address",
      },
    ],
    name: "pendingReward",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_pid",
        type: "uint256",
      },
    ],
    name: "updatePool",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "massUpdatePools",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "deposit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "rewardBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "depositBNBRewards",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "emergencyWithdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "emergencyRewardWithdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x6080604052600060055534801561001557600080fd5b506040516115bf3803806115bf8339818101604052606081101561003857600080fd5b508051602082015160409092015190919060006100536101ad565b600080546001600160a01b0319166001600160a01b0383169081178255604051929350917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a350600180546001600160a01b03199081166001600160a01b0395861690811783556002949094556006839055604080516080810182529485526103e86020860181815291860194855260006060870181815260038054968701815590915295517fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b60049095029485018054909416971696909617909155517fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85c82015590517fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85d82015590517fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85e909101556005556101b1565b3390565b6113ff806101c06000396000f3fe6080604052600436106101095760003560e01c80638ae39cac11610095578063b6b55f2511610064578063b6b55f2514610325578063db2e21bc1461034f578063e0de16e514610364578063f2fde38b1461036c578063f40f0f521461039f57610109565b80638ae39cac146102b65780638da5cb5b146102cb5780638dbb1e3a146102e0578063aa5c3ab41461031057610109565b806348cd4cb1116100dc57806348cd4cb11461020a57806351eb05a61461023157806351ed6a301461025b578063630b5ba11461028c578063715018a6146102a157610109565b80631526fe271461010e5780631959a002146101685780632e1a7d4d146101b45780633279beab146101e0575b600080fd5b34801561011a57600080fd5b506101386004803603602081101561013157600080fd5b50356103d2565b604080516001600160a01b0390951685526020850193909352838301919091526060830152519081900360800190f35b34801561017457600080fd5b5061019b6004803603602081101561018b57600080fd5b50356001600160a01b0316610413565b6040805192835260208301919091528051918290030190f35b3480156101c057600080fd5b506101de600480360360208110156101d757600080fd5b503561042c565b005b3480156101ec57600080fd5b506101de6004803603602081101561020357600080fd5b50356105a9565b34801561021657600080fd5b5061021f610620565b60408051918252519081900360200190f35b34801561023d57600080fd5b506101de6004803603602081101561025457600080fd5b5035610626565b34801561026757600080fd5b50610270610767565b604080516001600160a01b039092168252519081900360200190f35b34801561029857600080fd5b506101de610776565b3480156102ad57600080fd5b506101de610799565b3480156102c257600080fd5b5061021f61084d565b3480156102d757600080fd5b50610270610853565b3480156102ec57600080fd5b5061021f6004803603604081101561030357600080fd5b5080359060200135610862565b34801561031c57600080fd5b5061021f610877565b34801561033157600080fd5b506101de6004803603602081101561034857600080fd5b503561087c565b34801561035b57600080fd5b506101de6109a9565b6101de610a38565b34801561037857600080fd5b506101de6004803603602081101561038f57600080fd5b50356001600160a01b0316610aac565b3480156103ab57600080fd5b5061021f600480360360208110156103c257600080fd5b50356001600160a01b0316610b1f565b600381815481106103df57fe5b600091825260209091206004909102018054600182015460028301546003909301546001600160a01b039092169350919084565b6004602052600090815260409020805460019091015482565b6000600360008154811061043c57fe5b60009182526020808320338452600491829052604090932080549290910290920192508311156104a8576040805162461bcd60e51b81526020600482015260126024820152711dda5d1a191c985dce881b9bdd0819dbdbd960721b604482015290519081900360640190fd5b6104b26000610626565b60006104ec82600101546104e664e8d4a510006104e087600301548760000154610c7290919063ffffffff16565b90610ccb565b90610d0d565b905080156105235760006104fe610877565b905080821115610517576105123382610d4f565b610521565b6105213383610d4f565b505b831561054d5781546105359085610d0d565b8255825461054d906001600160a01b03163386610de9565b600383015482546105689164e8d4a51000916104e091610c72565b600183015560408051858152905133917f884edad9ce6fa2440d8a54cc123490eb96d2768479d49ff9c7366125a9424364919081900360200190a250505050565b6105b1610e3b565b6000546001600160a01b03908116911614610613576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b61061d3382610d4f565b50565b60065481565b60006003828154811061063557fe5b9060005260206000209060040201905080600201544311610656575061061d565b8054604080516370a0823160e01b815230600482015290516000926001600160a01b0316916370a08231916024808301926020929190829003018186803b1580156106a057600080fd5b505afa1580156106b4573d6000803e3d6000fd5b505050506040513d60208110156106ca57600080fd5b505190508015806106e057506106de610877565b155b156106f257504360029091015561061d565b6000610702836002015443610862565b9050600061072f6005546104e0866001015461072960025487610c7290919063ffffffff16565b90610c72565b9050610752610747846104e08464e8d4a51000610c72565b600386015490610e3f565b60038501555050436002909201919091555050565b6001546001600160a01b031681565b60035460005b818110156107955761078d81610626565b60010161077c565b5050565b6107a1610e3b565b6000546001600160a01b03908116911614610803576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b60025481565b6000546001600160a01b031690565b600061086e8284610d0d565b90505b92915050565b303190565b6000600360008154811061088c57fe5b600091825260208083203384526004918290526040842092909102019250906108b490610626565b8054156109225760006108e982600101546104e664e8d4a510006104e087600301548760000154610c7290919063ffffffff16565b905080156109205760006108fb610877565b9050808211156109145761090f3382610d4f565b61091e565b61091e3383610d4f565b505b505b821561094e57815461093f906001600160a01b0316333086610e99565b805461094b9084610e3f565b81555b600382015481546109699164e8d4a51000916104e091610c72565b600182015560408051848152905133917fe1fffcc4923d04b559f4d29a8bfc6cda04eb5b0d3c460751c2402c5c5cc9109c919081900360200190a2505050565b600060036000815481106109b957fe5b6000918252602080832033808552600492839052604090942080549290930201805490945091926109f3926001600160a01b031691610de9565b600080825560018201819055604080519182525133917f5fafa99d0643513820be26656b45130b01e1c03062e1266bf36f88cbd3bd9695919081900360200190a25050565b60003411610a775760405162461bcd60e51b81526004018080602001828103825260328152602001806113546032913960400191505060405180910390fd5b6040805134815290517fff0d9f73324a6d0750798c2f9cca51b72af70d04b4fc2227870609b7a33ebc9b9181900360200190a1565b610ab4610e3b565b6000546001600160a01b03908116911614610b16576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b61061d81610ef9565b6000806003600081548110610b3057fe5b600091825260208083206001600160a01b038781168552600480845260408087209582029093016003810154815485516370a0823160e01b81523094810194909452945191985095969493909216926370a0823192602480840193829003018186803b158015610b9f57600080fd5b505afa158015610bb3573d6000803e3d6000fd5b505050506040513d6020811015610bc957600080fd5b5051600285015490915043118015610be057508015155b15610c40576000610bf5856002015443610862565b90506000610c1c6005546104e0886001015461072960025487610c7290919063ffffffff16565b9050610c3b610c34846104e08464e8d4a51000610c72565b8590610e3f565b935050505b610c6883600101546104e664e8d4a510006104e0868860000154610c7290919063ffffffff16565b9695505050505050565b600082610c8157506000610871565b82820282848281610c8e57fe5b041461086e5760405162461bcd60e51b81526004018080602001828103825260218152602001806113866021913960400191505060405180910390fd5b600061086e83836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f000000000000815250610f99565b600061086e83836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f77000081525061103b565b6040516000906001600160a01b038416906159d890849084818181858888f193505050503d8060008114610d9f576040519150601f19603f3d011682016040523d82523d6000602084013e610da4565b606091505b5050905080610de45760405162461bcd60e51b81526004018080602001828103825260238152602001806113a76023913960400191505060405180910390fd5b505050565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663a9059cbb60e01b179052610de4908490611095565b3390565b60008282018381101561086e576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b604080516001600160a01b0380861660248301528416604482015260648082018490528251808303909101815260849091019091526020810180516001600160e01b03166323b872dd60e01b179052610ef3908590611095565b50505050565b6001600160a01b038116610f3e5760405162461bcd60e51b815260040180806020018281038252602681526020018061132e6026913960400191505060405180910390fd5b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b600081836110255760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b83811015610fea578181015183820152602001610fd2565b50505050905090810190601f1680156110175780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b50600083858161103157fe5b0495945050505050565b6000818484111561108d5760405162461bcd60e51b8152602060048201818152835160248401528351909283926044909101919085019080838360008315610fea578181015183820152602001610fd2565b505050900390565b60606110ea826040518060400160405280602081526020017f5361666542455032303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166111469092919063ffffffff16565b805190915015610de45780806020019051602081101561110957600080fd5b5051610de45760405162461bcd60e51b815260040180806020018281038252602a815260200180611304602a913960400191505060405180910390fd5b6060611155848460008561115d565b949350505050565b6060611168856112ca565b6111b9576040805162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015290519081900360640190fd5b60006060866001600160a01b031685876040518082805190602001908083835b602083106111f85780518252601f1990920191602091820191016111d9565b6001836020036101000a03801982511681845116808217855250505050505090500191505060006040518083038185875af1925050503d806000811461125a576040519150601f19603f3d011682016040523d82523d6000602084013e61125f565b606091505b509150915081156112735791506111559050565b8051156112835780518082602001fd5b60405162461bcd60e51b8152602060048201818152865160248401528651879391928392604401919085019080838360008315610fea578181015183820152602001610fd2565b6000813f7fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a47081811480159061115557505015159291505056fe5361666542455032303a204245503230206f7065726174696f6e20646964206e6f7420737563636565644f776e61626c653a206e6577206f776e657220697320746865207a65726f20616464726573734d65737361676520686173206e6f20424e422076616c756520746f206465706f73697420696e746f20636f6e74726163742e536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f775472616e7366657248656c7065723a20424e425f5452414e534645525f4641494c4544a26469706673582212209c8470d5e0db0c47e5cad564f3f0712a5087dc82720340578cea7cbd40c9eb7f64736f6c634300060c0033";

type BNBRewardApeConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: BNBRewardApeConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class BNBRewardApe__factory extends ContractFactory {
  constructor(...args: BNBRewardApeConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    _stakeToken: string,
    _rewardPerBlock: BigNumberish,
    _startBlock: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<BNBRewardApe> {
    return super.deploy(
      _stakeToken,
      _rewardPerBlock,
      _startBlock,
      overrides || {}
    ) as Promise<BNBRewardApe>;
  }
  getDeployTransaction(
    _stakeToken: string,
    _rewardPerBlock: BigNumberish,
    _startBlock: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _stakeToken,
      _rewardPerBlock,
      _startBlock,
      overrides || {}
    );
  }
  attach(address: string): BNBRewardApe {
    return super.attach(address) as BNBRewardApe;
  }
  connect(signer: Signer): BNBRewardApe__factory {
    return super.connect(signer) as BNBRewardApe__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BNBRewardApeInterface {
    return new utils.Interface(_abi) as BNBRewardApeInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): BNBRewardApe {
    return new Contract(address, _abi, signerOrProvider) as BNBRewardApe;
  }
}
