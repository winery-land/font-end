/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  BaseContract,
  BigNumber,
  BigNumberish,
  BytesLike,
  CallOverrides,
  PopulatedTransaction,
  Signer,
  utils,
} from "ethers";
import { FunctionFragment, Result } from "@ethersproject/abi";
import { Listener, Provider } from "@ethersproject/providers";
import { TypedEventFilter, TypedEvent, TypedListener, OnEvent } from "./common";

export interface ApePriceGetterInterface extends utils.Interface {
  functions: {
    "DECIMALS()": FunctionFragment;
    "FACTORY()": FunctionFragment;
    "INITCODEHASH()": FunctionFragment;
    "getBNBPrice()": FunctionFragment;
    "getLPPrice(address,uint256)": FunctionFragment;
    "getLPPrices(address[],uint256)": FunctionFragment;
    "getPrice(address,uint256)": FunctionFragment;
    "getPrices(address[],uint256)": FunctionFragment;
    "getRawPrice(address)": FunctionFragment;
    "getRawPrices(address[])": FunctionFragment;
  };

  encodeFunctionData(functionFragment: "DECIMALS", values?: undefined): string;
  encodeFunctionData(functionFragment: "FACTORY", values?: undefined): string;
  encodeFunctionData(
    functionFragment: "INITCODEHASH",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "getBNBPrice",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "getLPPrice",
    values: [string, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "getLPPrices",
    values: [string[], BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "getPrice",
    values: [string, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "getPrices",
    values: [string[], BigNumberish]
  ): string;
  encodeFunctionData(functionFragment: "getRawPrice", values: [string]): string;
  encodeFunctionData(
    functionFragment: "getRawPrices",
    values: [string[]]
  ): string;

  decodeFunctionResult(functionFragment: "DECIMALS", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "FACTORY", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "INITCODEHASH",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getBNBPrice",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "getLPPrice", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "getLPPrices",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "getPrice", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "getPrices", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "getRawPrice",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getRawPrices",
    data: BytesLike
  ): Result;

  events: {};
}

export interface ApePriceGetter extends BaseContract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  interface: ApePriceGetterInterface;

  queryFilter<TEvent extends TypedEvent>(
    event: TypedEventFilter<TEvent>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TEvent>>;

  listeners<TEvent extends TypedEvent>(
    eventFilter?: TypedEventFilter<TEvent>
  ): Array<TypedListener<TEvent>>;
  listeners(eventName?: string): Array<Listener>;
  removeAllListeners<TEvent extends TypedEvent>(
    eventFilter: TypedEventFilter<TEvent>
  ): this;
  removeAllListeners(eventName?: string): this;
  off: OnEvent<this>;
  on: OnEvent<this>;
  once: OnEvent<this>;
  removeListener: OnEvent<this>;

  functions: {
    DECIMALS(overrides?: CallOverrides): Promise<[BigNumber]>;

    FACTORY(overrides?: CallOverrides): Promise<[string]>;

    INITCODEHASH(overrides?: CallOverrides): Promise<[string]>;

    getBNBPrice(overrides?: CallOverrides): Promise<[BigNumber]>;

    getLPPrice(
      token: string,
      _decimals: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    getLPPrices(
      tokens: string[],
      _decimals: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[BigNumber[]] & { prices: BigNumber[] }>;

    getPrice(
      token: string,
      _decimals: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    getPrices(
      tokens: string[],
      _decimals: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[BigNumber[]] & { prices: BigNumber[] }>;

    getRawPrice(token: string, overrides?: CallOverrides): Promise<[BigNumber]>;

    getRawPrices(
      tokens: string[],
      overrides?: CallOverrides
    ): Promise<[BigNumber[]] & { prices: BigNumber[] }>;
  };

  DECIMALS(overrides?: CallOverrides): Promise<BigNumber>;

  FACTORY(overrides?: CallOverrides): Promise<string>;

  INITCODEHASH(overrides?: CallOverrides): Promise<string>;

  getBNBPrice(overrides?: CallOverrides): Promise<BigNumber>;

  getLPPrice(
    token: string,
    _decimals: BigNumberish,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  getLPPrices(
    tokens: string[],
    _decimals: BigNumberish,
    overrides?: CallOverrides
  ): Promise<BigNumber[]>;

  getPrice(
    token: string,
    _decimals: BigNumberish,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  getPrices(
    tokens: string[],
    _decimals: BigNumberish,
    overrides?: CallOverrides
  ): Promise<BigNumber[]>;

  getRawPrice(token: string, overrides?: CallOverrides): Promise<BigNumber>;

  getRawPrices(
    tokens: string[],
    overrides?: CallOverrides
  ): Promise<BigNumber[]>;

  callStatic: {
    DECIMALS(overrides?: CallOverrides): Promise<BigNumber>;

    FACTORY(overrides?: CallOverrides): Promise<string>;

    INITCODEHASH(overrides?: CallOverrides): Promise<string>;

    getBNBPrice(overrides?: CallOverrides): Promise<BigNumber>;

    getLPPrice(
      token: string,
      _decimals: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getLPPrices(
      tokens: string[],
      _decimals: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber[]>;

    getPrice(
      token: string,
      _decimals: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getPrices(
      tokens: string[],
      _decimals: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber[]>;

    getRawPrice(token: string, overrides?: CallOverrides): Promise<BigNumber>;

    getRawPrices(
      tokens: string[],
      overrides?: CallOverrides
    ): Promise<BigNumber[]>;
  };

  filters: {};

  estimateGas: {
    DECIMALS(overrides?: CallOverrides): Promise<BigNumber>;

    FACTORY(overrides?: CallOverrides): Promise<BigNumber>;

    INITCODEHASH(overrides?: CallOverrides): Promise<BigNumber>;

    getBNBPrice(overrides?: CallOverrides): Promise<BigNumber>;

    getLPPrice(
      token: string,
      _decimals: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getLPPrices(
      tokens: string[],
      _decimals: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getPrice(
      token: string,
      _decimals: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getPrices(
      tokens: string[],
      _decimals: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getRawPrice(token: string, overrides?: CallOverrides): Promise<BigNumber>;

    getRawPrices(
      tokens: string[],
      overrides?: CallOverrides
    ): Promise<BigNumber>;
  };

  populateTransaction: {
    DECIMALS(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    FACTORY(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    INITCODEHASH(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    getBNBPrice(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    getLPPrice(
      token: string,
      _decimals: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getLPPrices(
      tokens: string[],
      _decimals: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getPrice(
      token: string,
      _decimals: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getPrices(
      tokens: string[],
      _decimals: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getRawPrice(
      token: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getRawPrices(
      tokens: string[],
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;
  };
}
